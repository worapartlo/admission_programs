"use client";

import { useState, useEffect } from "react";

export default function SelectProgram() {

  // baseURL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÇ‡∏î‡∏¢‡∏î‡∏∂‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env
  const baseURL = process.env.NEXT_PUBLIC_API_URL;

  // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏à‡∏≤‡∏Å‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÉ‡∏ô state ‡πÇ‡∏î‡∏¢‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô null
  const [scores, setScores] = useState({
    gpax: null,

    //Netsat Scores
    thai_101: null,
    eng_102: null,
    math_103: null,
    sci_201: null,
    chem_202: null,
    bio_203: null,
    phy_204: null,

    //TPAT TGAT scores
    tgat_90: null,
    tgat1_91: null,
    tgat2_92: null,
    tgat3_93: null,
    tpat3_30: null,

    //Compentency scores
    fr_011: null,
    de_012: null,
    zh_013: null,
    ja_014: null,
    ko_015: null,
    es_016: null,
    music_021: null,
    exp_visual_art_024: null,
    drawing_023: null,
    commu_drawing_025: null,
    commu_design_026: null,
    ar_041: null,
    design_042: null,
    art_051: null,
    physical_052: null,
    tech_for_med_vision_061: null,
    art_for_med_vision_062: null,
  });

  // ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏à‡∏≤‡∏Å api list_programs
  type Program = {
    faculty: string;
    program_id: number;
    program_name: string;
    total_score: number;
    min_score: number;
    gpax_required: number;
  };

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≠‡∏ö‡∏ï‡∏¥‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô Program
  type ProgramWithPercentage = Program & {
    percentage?: number; // ‡∏Ñ‡∏¥‡∏î‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö min-max
    chanceCategory?: string; // ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≠‡∏ö‡∏ï‡∏¥‡∏î
    chanceMessage?: string; // ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à
  };

  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß
  const [allResults, setAllResults] = useState<Program[]>([]);
  const [filteredResults, setFilteredResults] = useState<ProgramWithPercentage[]>([]);
  const [loading, setLoading] = useState(false); // ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á loading ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏≠‡∏ú‡∏•

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≠‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå
  const categorizeChance = (
    percentage: number
  ): { category: string; message: string } => {
    if (percentage <= 0) {
      return {
        category: "no-chance",
        message:
          "üìå ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤ üìå\n‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï",
      };
    } else if (percentage > 0 && percentage <= 33) {
      return {
        category: "low-chance",
        message:
          "üå± ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≠‡∏ö‡∏ï‡∏¥‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô üå±\n‡∏´‡∏≤‡∏Å‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏î‡πâ‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô",
      };
    } else if (percentage > 33 && percentage <= 66) {
      return {
        category: "medium-chance",
        message:
          "üí° ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≠‡∏ö‡∏ï‡∏¥‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á üí°\n‡∏Ñ‡∏ß‡∏£‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏ù‡∏∂‡∏Å‡∏ù‡∏ô‡πÉ‡∏´‡πâ‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à",
      };
    } else {
      return {
        category: "high-chance",
        message:
          "‚ú® ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≠‡∏ö‡∏ï‡∏¥‡∏î‡∏™‡∏π‡∏á ‚ú®\n‡∏´‡∏≤‡∏Å‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á ‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏°‡∏≤‡∏Å‡∏¢‡∏¥‡πà‡∏á‡∏Ç‡∏∂‡πâ‡∏ô",
      };
    }
  };

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á ‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ
  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    let parsedValue = value === "" ? null : parseFloat(value);
  
    if (parsedValue !== null) {
      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô gpax ‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 4
      if (name === "gpax") {
        parsedValue = Math.min(parsedValue, 4);
      } else {
        // ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 100
        parsedValue = Math.min(parsedValue, 100);
      }
    }
  
    setScores({
      ...scores,
      [name]: parsedValue,
    });
  };

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° submit ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á backend
  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setLoading(true); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î

    try {
      const response = await fetch(
        `${baseURL}/programs`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(scores), // ‡∏™‡πà‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏õ‡∏¢‡∏±‡∏á backend
        }
      );

      if (!response.ok) {
        throw new Error("Network response was not ok");
      }

      const data = await response.json();
      setAllResults(data); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å backend

      // ‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      if (selectedProgram) {
        const filtered = data.filter(
          (program: Program) =>
            program.program_name === selectedProgram.program_name
        );

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≠‡∏ö‡∏ï‡∏¥‡∏î
        const filteredWithPercentage = filtered.map((program: Program) => {
          const percentage =
            selectedProgram.max_score !== selectedProgram.min_score
              ? ((program.total_score - selectedProgram.min_score) /
                  (selectedProgram.max_score - selectedProgram.min_score)) *
                100
              : program.total_score >= selectedProgram.min_score
              ? 100
              : 0;

          const percentageValue = parseFloat(percentage.toFixed(2));
          const { category, message } = categorizeChance(percentageValue);

          console.log(
            `Program: ${program.program_name}, Faculty: ${program.faculty}`
          );
          console.log(
            `Total Score: ${program.total_score}, Min Score: ${selectedProgram.min_score}, Max Score: ${selectedProgram.max_score}`
          );
          console.log(`Percentage: ${percentageValue}%, Chance: ${message}`);

          return {
            ...program,
            percentage: percentageValue,
            chanceCategory: category,
            chanceMessage: message,
          };
        });

        setFilteredResults(filteredWithPercentage);
      } else {
        setFilteredResults(data);
      }
    } catch (error) {
      console.error("Error fetching data:", error);
    } finally {
      setLoading(false); // ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î
    }
  };

  // ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á list ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô <select>
  interface type_list_Program {
    id: number;
    program_id: number;
    program_name: string;
    faculty_name: string;
    min_score: number;
    max_score: number;
  }

  // ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const [var_list_programs, setPrograms] = useState<type_list_Program[]>([]);
  const [selectedProgram, setSelectedProgram] =useState<type_list_Program | null>(null);

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• list_programs ‡∏à‡∏≤‡∏Å API ‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô dropdown
  useEffect(() => {
    fetch(
      `${baseURL}/list_programs`,
      {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(var_list_programs),
      }
    )
      .then(async (res) => {
        const contentType = res.headers.get("content-type");
        if (!res.ok || !contentType?.includes("application/json")) {
          throw new Error("Response is not valid JSON");
        }
        return res.json();
      })
      .then((data) => {
        setPrograms(data);
        setSelectedProgram(data[0]); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ default ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏£‡∏Å
      })
      .catch((err) => {
        console.error("Error fetching data:", err.message);
      });
  }, []);

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≠‡∏ö‡∏ï‡∏¥‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  useEffect(() => {
    if (selectedProgram && allResults.length > 0) {
      const filtered = allResults.filter(
        (program: Program) =>
          program.program_name === selectedProgram.program_name
      );

      // Calculate percentage for each filtered program and categorize chance
      const filteredWithPercentage = filtered.map((program: Program) => {
        const percentage =
          selectedProgram.max_score !== selectedProgram.min_score
            ? ((program.total_score - selectedProgram.min_score) /
                (selectedProgram.max_score - selectedProgram.min_score)) *
              100
            : program.total_score >= selectedProgram.min_score
            ? 100
            : 0;

        const percentageValue = parseFloat(percentage.toFixed(2));
        const { category, message } = categorizeChance(percentageValue);

        console.log(
          `Program: ${program.program_name}, Faculty: ${program.faculty}`
        );
        console.log(
          `Total Score: ${program.total_score}, Min Score: ${selectedProgram.min_score}, Max Score: ${selectedProgram.max_score}`
        );
        console.log(`Percentage: ${percentageValue}%`);

        return {
          ...program,
          percentage: percentageValue,
          chanceCategory: category,
          chanceMessage: message,
        };
      });

      setFilteredResults(filteredWithPercentage);
    }
  }, [selectedProgram, allResults]);

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÉ‡∏ô <select>
  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
    const selectedId = Number(event.target.value);
    const program = var_list_programs.find((p) => p.program_id === selectedId);
    setSelectedProgram(program || null);
  };

  // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≠‡∏ö‡∏ï‡∏¥‡∏î
  const getChanceBgColor = (category: string | undefined): string => {
    switch (category) {
      case "no-chance":
        return "bg-red-100";
      case "low-chance":
        return "bg-amber-100";
      case "medium-chance":
        return "bg-sky-100";
      case "high-chance":
        return "bg-green-100";
      default:
        return "";
    }
  };

  return (
    <div className="flex flex-col justify-center items-center p-2 m-4">
      <h1 className="font-bold underline decoration-double whitespace-nowrap text-sm sm:text-base md:text-lg lg:text-xl xl:text-2xl">
        üë®üèª‚Äçüéì ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ü™Ñüìö
      </h1>
      {/* modal infomation */}
      <button
        className="btn btn-md mt-4"
        onClick={() => {
          const modal = document.getElementById(
            "my_modal_1"
          ) as HTMLDialogElement | null;
          if (modal) {
            modal.showModal();
          }
        }}
      >
        üìñ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
      </button>
      <dialog id="my_modal_1" className="modal">
        <div className="modal-box">
          <h3 className="font-bold text-lg">**‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô**</h3>
          <p className="py-4">
            1. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
            <br />
            2. ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô GPAX ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô NetSat, ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞, TGAT TPAT
            <br />
            3. ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° &quot;‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå&quot; ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            <br />
            4. ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡πÉ‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
            <br />
            <br />
            **‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤‡∏Å‡∏≥‡∏´‡∏ô‡∏î**
          </p>
          <div className="modal-action">
            <form method="dialog">
              {/* if there is a button in form, it will close the modal */}
              <button className="btn">Close</button>
            </form>
          </div>
        </div>
      </dialog>

      {/* form */}
      <form onSubmit={handleSubmit} className="my-8 md:w-1/2 sm:w-sx">
        <h1 className="text-xl font-bold mb-4">üéì ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£</h1>
        {/* Dropdown ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° */}
        <select
          id="program-select"
          className="select border p-2 rounded"
          onChange={handleSelectChange}
          value={selectedProgram?.program_id || ""}
        >
          {Object.entries(

            //.reduce() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡∏Å‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° faculty_name groups ‡∏Ñ‡∏∑‡∏≠‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á
            var_list_programs.reduce((groups, program) => {
              if (!groups[program.faculty_name]) {
                groups[program.faculty_name] = [];
              }
              groups[program.faculty_name].push(program);
              return groups;

              //Record<string, typeof var_list_programs> ‡∏Ñ‡∏∑‡∏≠ type ‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤ key ‡πÄ‡∏õ‡πá‡∏ô string ‡πÅ‡∏•‡∏∞ value ‡πÄ‡∏õ‡πá‡∏ô array ‡∏Ç‡∏≠‡∏á program object
            }, {} as Record<string, typeof var_list_programs>)
          ).map(([faculty, programs]) => (
            <optgroup key={faculty} label={faculty}>
              {programs.map((program) => (
                <option key={program.id} value={program.program_id}>
                  {program.program_name}
                </option>
              ))}
            </optgroup>
          ))}
        </select>

        {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      {selectedProgram && (
        <div className="mt-4 border p-4 rounded shadow">
          <p>
            <strong>Program ID:</strong> {selectedProgram.program_id}
          </p>
          <p>
            <strong>Program Name:</strong> {selectedProgram.program_name}
          </p>
          <p>
            <strong>Faculty Name:</strong> {selectedProgram.faculty_name}
          </p>
          <p>
            <strong>Min Score:</strong> {selectedProgram.min_score}
          </p>
          <p>
            <strong>Max Score:</strong> {selectedProgram.max_score}
          </p>
        </div>
      )}  */}

        <fieldset className="fieldset">
          <legend className="fieldset-legend text-lg">
            üìñ ‡πÄ‡∏Å‡∏£‡∏î‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢ (GPAX)
          </legend>
          <input
            type="number"
            className="input"
            name="gpax"
            placeholder="Enter your GPAX"
            required
            min={0}
            max={4}
            step={0.01}
            value={scores.gpax || ""}
            onChange={handleInputChange}
          />
        </fieldset>

        {/* Netsat scores */}
        <div className="collapse collapse-arrow bg-gray-100 border-base-300 border my-3">
          <input type="checkbox" />
          <div className="collapse-title">‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô NetSat (NetSat Scores)</div>
          <div className="collapse-content bg-gray-50">
            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                101 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏â‡∏•‡∏≤‡∏î‡∏£‡∏π‡πâ‡πà‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
              </legend>
              <input
                type="number"
                className="input"
                name="thai_101"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.thai_101 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                102 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏â‡∏•‡∏≤‡∏î‡∏£‡∏π‡πâ‡πà‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
              </legend>
              <input
                type="number"
                className="input"
                name="eng_102"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.eng_102 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                103 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏â‡∏•‡∏≤‡∏î‡∏£‡∏π‡πâ‡πà‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ ‡∏ó‡∏≤‡∏á‡∏î‡πâ‡∏≤‡∏ô‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå
              </legend>
              <input
                type="number"
                className="input"
                name="math_103"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.math_103 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                201 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏â‡∏•‡∏≤‡∏î‡∏£‡∏π‡πâ‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ
              </legend>
              <input
                type="number"
                className="input"
                name="sci_201"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.sci_201 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                202 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏â‡∏•‡∏≤‡∏î‡∏£‡∏π‡πâ‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡πÄ‡∏Ñ‡∏°‡∏µ
              </legend>
              <input
                type="number"
                className="input"
                name="chem_202"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.chem_202 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                203 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏â‡∏•‡∏≤‡∏î‡∏£‡∏π‡πâ‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ä‡∏µ‡∏ß‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤
              </legend>
              <input
                type="number"
                className="input"
                name="bio_203"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.bio_203 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                204 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏â‡∏•‡∏≤‡∏î‡∏£‡∏π‡πâ‡πà‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô ‡∏î‡πâ‡∏≤‡∏ô‡∏ü‡∏¥‡∏™‡∏¥‡∏Å‡∏™‡πå
              </legend>
              <input
                type="number"
                className="input"
                name="phy_204"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.phy_204 || ""}
                onChange={handleInputChange}
              />
            </fieldset>
          </div>
        </div>

        {/* Competency Scores */}
        <div className="collapse collapse-arrow bg-gray-100 border-base-300 border my-3">
          <input type="checkbox" />
          <div className="collapse-title">‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞ (Competency Scores)</div>
          <div className="collapse-content bg-gray-50">
            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                011 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏ù‡∏£‡∏±‡πà‡∏á‡πÄ‡∏®‡∏©
              </legend>
              <input
                type="number"
                className="input"
                name="fr_011"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.fr_011 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                012 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÄ‡∏¢‡∏≠‡∏£‡∏°‡∏±‡∏ô
              </legend>
              <input
                type="number"
                className="input"
                name="de_012"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.de_012 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                013 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏à‡∏µ‡∏ô
              </legend>
              <input
                type="number"
                className="input"
                name="zh_013"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.zh_013 || ""}
                onChange={handleInputChange}
              />
            </fieldset>
            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                014 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏ç‡∏µ‡πà‡∏õ‡∏∏‡πà‡∏ô
              </legend>
              <input
                type="number"
                className="input"
                name="ja_014"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.ja_014 || ""}
                onChange={handleInputChange}
              />
            </fieldset>
            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                015 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÄ‡∏Å‡∏≤‡∏´‡∏•‡∏µ
              </legend>
              <input
                type="number"
                className="input"
                name="ko_015"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.ko_015 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                016 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏™‡πÄ‡∏õ‡∏ô
              </legend>
              <input
                type="number"
                className="input"
                name="es_016"
                placeholder="Enter your score"
                max={100}
                value={scores.es_016 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">021 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏î‡∏ô‡∏ï‡∏£‡∏µ</legend>
              <input
                type="number"
                className="input"
                name="music_021"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.music_021 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                024 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏•‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ó‡∏±‡∏®‡∏ô‡∏®‡∏¥‡∏•‡∏õ‡πå
              </legend>
              <input
                type="number"
                className="input"
                name="exp_visual_art_024"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.exp_visual_art_024 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                023 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏î‡πÄ‡∏™‡πâ‡∏ô
              </legend>
              <input
                type="number"
                className="input"
                name="drawing_023"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.drawing_023 || ""}
                onChange={handleInputChange}
              />
            </fieldset>
            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                025 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏ß‡∏≤‡∏î‡πÄ‡∏™‡πâ‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£
              </legend>
              <input
                type="number"
                className="input"
                name="commu_drawing_025"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.commu_drawing_025 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                026 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£
              </legend>
              <input
                type="number"
                className="input"
                name="commu_design_026"
                placeholder="Enter your score"
                max={100}
                value={scores.commu_design_026 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                041 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏™‡∏ñ‡∏≤‡∏õ‡∏±‡∏ï‡∏¢‡∏Å‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå
              </legend>
              <input
                type="number"
                className="input"
                name="ar_041"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.ar_041 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                042 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö
              </legend>
              <input
                type="number"
                className="input"
                name="design_042"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.design_042 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">051 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏ó‡∏≤‡∏á‡∏®‡∏¥‡∏•‡∏õ‡πå</legend>
              <input
                type="number"
                className="input"
                name="art_051"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.art_051 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">052 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏¢</legend>
              <input
                type="number"
                className="input"
                name="physical_052"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.physical_052 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                061 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏ä‡∏ô‡∏¥‡∏ó‡∏±‡∏®‡∏ô‡πå
              </legend>
              <input
                type="number"
                className="input"
                name="tech_for_med_vision_061"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.tech_for_med_vision_061 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                062 ‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏î‡πâ‡∏≤‡∏ô‡∏®‡∏¥‡∏•‡∏õ‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ß‡∏ä‡∏ô‡∏¥‡∏ó‡∏±‡∏®‡∏ô‡πå
              </legend>
              <input
                type="number"
                className="input"
                name="art_for_med_vision_062"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.art_for_med_vision_062 || ""}
                onChange={handleInputChange}
              />
            </fieldset>
          </div>
        </div>

        {/* TGAT TPAT Scores */}
        <div className="collapse collapse-arrow bg-gray-100 border-base-300 border my-3">
          <input type="checkbox" />
          <div className="collapse-title">
            ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô TGAT TPAT (TGAT TPAT Scores)
          </div>
          <div className="collapse-content bg-gray-50">
            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                TGAT 90 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
              </legend>
              <input
                type="number"
                className="input"
                name="tgat_90"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.tgat_90 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                TGAT1 91 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏â‡∏•‡∏≤‡∏î‡∏£‡∏π‡πâ‡πà‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ-‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
              </legend>
              <input
                type="number"
                className="input"
                name="tgat1_91"
                placeholder="Enter your score"
                max={100}
                value={scores.tgat1_91 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                TGAT2 92 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ-‡∏Å‡∏≤‡∏£‡∏Ñ‡∏¥‡∏î‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•
              </legend>
              <input
                type="number"
                className="input"
                name="tgat2_92"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.tgat2_92 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                TGAT3 93 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ-‡∏™‡∏°‡∏£‡∏£‡∏ñ‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
              </legend>
              <input
                type="number"
                className="input"
                name="tgat3_93"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.tgat3_93 || ""}
                onChange={handleInputChange}
              />
            </fieldset>

            <fieldset className="fieldset">
              <legend className="fieldset-legend">
                TPAT 30 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏ô‡∏±‡∏î‡∏ó‡∏≤‡∏á‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ ‡∏ß‡∏¥‡∏®‡∏ß‡∏Å‡∏£‡∏£‡∏°‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå
              </legend>
              <input
                type="number"
                className="input"
                name="tpat3_30"
                placeholder="Enter your score"
                min={0}
                max={100}
                value={scores.tpat3_30 || ""}
                onChange={handleInputChange}
              />
            </fieldset>
          </div>
        </div>

        {/* button */}
        <div className="flex justify-center items-center scale-125 mt-5 pt-5">
          <button
            type="submit"
            className="btn btn-warning text-white"
            disabled={!scores.gpax}
          >
            ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
          </button>
        </div>
      </form>

      {/* result 2 */}
      <div className="px-10 my-6 items-center justify-center text-center drop-shadow-xl rounded-xl">
        {allResults.length > 0 ? (
          <div className="w-full p-2 md:px-0">
            <div className="flex flex-col mb-4">
              {filteredResults.length > 0 ? (
                <div className="overflow-x-auto mb-8">
                  {filteredResults.map((program) => (
                    <div
                      key={program.program_id}
                      className={`rounded-xl shadow-md p-6 mb-6 transition-all duration-300 ${getChanceBgColor(
                        program.chanceCategory
                      )}`}
                    >
                      <h3 className="text-center text-xl font-semibold text-gray-800 mb-2">
                        üéì ‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å:
                      </h3>
                      <h4 className="text-center text-lg font-bold text-amber-600 underline mb-1">
                        {program.faculty} - {program.program_name}
                      </h4>
                      <p className="text-center text-base text-gray-700 whitespace-pre-wrap">
                        {program.chanceMessage || "N/A"}
                      </p>
                    </div>
                  ))}
                </div>
              ) : (
                <p>
                  ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏≠‡∏á{" "}
                  <span className="font-bold">
                    {selectedProgram?.program_name}
                  </span>{" "}
                  ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô.
                </p>
              )}
            </div>
          </div>
        ) : loading ? (
          <span className="loading loading-ring loading-xl text-success scale-200"></span>
        ) : (
          <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ï‡∏≤‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡∏Å‡∏£‡∏≠‡∏Å</p>
        )}
      </div>
    </div>
  );
}
